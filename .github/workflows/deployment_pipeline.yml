name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  lint_build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies 
        run: npm install  
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Test
        run: npm test

  playwright_tests:
    runs-on: ubuntu-latest
    needs: lint_build_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  fly_deployment:
    runs-on: ubuntu-latest
    needs: playwright_tests
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Check deployment health
        run: |
          echo "Wait 20secs"
          sleep 20
          if ! curl -f https://fso-11-ancient-pond-4440.fly.dev/health; then
            echo "Health check failed"
            flyctl releases rollback --yes
            exit 1
          else
            echo "Health check passed"
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  notify_success:
    runs-on: ubuntu-latest
    needs: fly_deployment
    if: ${{ github.event_name == 'push' && success() }}
    steps:
      - name: Successful deployment
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: |
            New version deployed :)
            ${{ github.repository }}

  notify_failure:
    runs-on: ubuntu-latest
    needs: [lint_build_test, playwright_tests, fly_deployment]
    if: ${{ failure() }}
    steps:
      - name: Build failed
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: |
            Build failed :(
            ${{ github.repository }}
            
            failed commit: ${{ github.sha }}
            
  tag_release:
    runs-on: ubuntu-latest
    needs: fly_deployment
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
